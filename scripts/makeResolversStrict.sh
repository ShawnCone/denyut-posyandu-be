#!/bin/bash
# Script to make Mutation, Query and Resolvers generated by codegen.ts to be strict
# File to be scanned and modified
FILE_TO_MODIFY="src/generated/graphql.ts"

# Patterns to start scanning from
PATTERNS=("export type QueryResolvers<" "export type MutationResolvers<" "export type Resolvers<")

# Pattern to end scanning
END_PATTERN="}>"

# Temporary file for intermediate output
TMP_FILE=$(mktemp)

# Function to process a line
process_line() {
    local line=$1
    # Replace '?: Resolver<' with ': Resolver<'
    line="${line/\?: Resolver</: Resolver<}"
    # Replace '?: Query' with ': Query'
    line="${line/\?: Query/: Query}"
    # Replace '?: Mutation' with ': Mutation'
    echo "${line/\?: Mutation/: Mutation}"
}

# Read the file line by line and modify it
while IFS= read -r line
do
    for pattern in "${PATTERNS[@]}"; do
        # Check if the line contains one of the start patterns
        if [[ $line =~ $pattern ]]; then
            IN_BLOCK=1
            break
        fi
    done

    if [[ $IN_BLOCK -eq 1 ]]; then
        # Process the line to replace optional fields
        line=$(process_line "$line")
    fi

    echo "$line" >> "$TMP_FILE"

    # Check if the line contains the end pattern
    if [[ $IN_BLOCK -eq 1 && $line =~ $END_PATTERN ]]; then
        IN_BLOCK=0
    fi
done < "$FILE_TO_MODIFY"

# Replace the original file with the modified file
mv "$TMP_FILE" "$FILE_TO_MODIFY"