enum GrowthType {
  HEIGHT
  WEIGHT
  HEADCIRC
  ARMCIRC
}

enum GrowthInterpretationSeverity {
  NORMAL
  WARNING
  SEVERE
}

type PreviousGrowthMeasurementData {
  measurementValue: Float!
  measurementDate: String!
}

type GrowthInterpretationResponse {
  label: String!
  severity: GrowthInterpretationSeverity!
  previousMeasurementData: PreviousGrowthMeasurementData
}

type SingleMonthGrowthData {
  ageInMonths: Int!
  SD0: Float!
  SD1: Float!
  SD2: Float!
  SD3: Float!
  SD1neg: Float!
  SD2neg: Float!
  SD3neg: Float!
}

type GrowthGraphStandardDataResponse {
  standardData: [SingleMonthGrowthData!]!
  measurementValue: Float!
  measurementMonthOld: Int!
}

type WeightGrowthEvaluationResponse {
  increaseInWeight: Float!
  isEnough: Boolean!
  targetIncrease: Float!
}

type SingleMeasurementMonthSKDNDataResponse {
  dCount: Int!
  sCount: Int!
  kCount: Int!
  nCount: Int!
  S36Count: Int!
  LCount: Int!
  goodWeightCount: Int!
  lessWeightCount: Int!
  lowWeightCount: Int!
}

type Query {
  growthInterpretation(
    recordId: String!
    growthType: GrowthType!
  ): GrowthInterpretationResponse # Data can be not available
  growthGraphStandardData(
    recordId: String!
    growthType: GrowthType!
  ): GrowthGraphStandardDataResponse # Data can be not available
  weightGrowthEvaluation(recordId: String!): WeightGrowthEvaluationResponse
  singleMeasurementMonthSKDNData(
    posyanduId: String!
    recordMonthIdx: Int!
    recordYear: Int!
  ): SingleMeasurementMonthSKDNDataResponse!
}
